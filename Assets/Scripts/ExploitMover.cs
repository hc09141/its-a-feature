using UnityEngine;
using System.Collections;

public class ExploitMover : MonoBehaviour {
	public GameObject exploit_effect;

	public static float MATERIAL_RATIO = 65;

	private static float increment_float = 0.1f;
	private static Vector3 increment = new Vector3 (increment_float, increment_float, increment_float);
	private AudioSource nice;
	private AudioSource evil;

	// Use this for initialization
	void Start () {	
		foreach (AudioSource sound in GetComponents<AudioSource>()) {
			print (sound.clip.name);
			if (sound.clip.name == "First_Levels_-_Nice") {
				nice = sound;
			} else {
				evil = sound;
			}
		}
	}
	
	// Update is called once per frame
	void Update () {
		Exploit ();
		SoundBalance ();
	}		

	void Exploit(){
		if(ParentSize() > 20){
			ExploitCheck ();
		}
		this.gameObject.transform.localScale = (increment * (ParentSize() * 1.0f));

		exploit_effect.GetComponent<Renderer> ().material.SetFloat ("_Radius", this.gameObject.transform.localScale.x / MATERIAL_RATIO);

	}

	void ExploitCheck(){
		Collider2D[] nearbys = Physics2D.OverlapCircleAll (gameObject.transform.position, this.gameObject.transform.localScale.x / 2f);
		int i = 0;
		while (i < nearbys.Length) {
			Collider2D x = nearbys [i];
			if (x.tag == "Hidden" || x.tag =="HiddenTrigger" || x.tag == "Enemy") {
				x.SendMessage ("TriggeredByExploit");
			}
			i++;
		}
	}

	void SoundBalance() {
		float ratio = ParentSize () / (float)PlayerController.MAX_SIZE;
		evil.volume = ratio;
		nice.volume = 1.0f - ratio;
	}

	private int ParentSize(){
		return transform.parent.gameObject.GetComponent<PlayerController> ().Size ();
	}
}
